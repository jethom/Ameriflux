'Program name: C:\Documents and Settings\Desai Lab\My Documents\Ameriflux\WLEF\campbell\trailer\TRAILER_V1.CR3
'Date written: 1/3/2014
'Transform Version: 0.5
'Transform file: C:\Program Files\Campbellsci\LoggerNet\CR23X.TRN Version: 1.3
'
'This program was converted from C:\Documents and Settings\Desai Lab\My Documents\Ameriflux\WLEF\campbell\trailer\TRAILER_V1.CSI
'using Campbell Scientific's Transformer application.
'
'CRBasic angle units are in Radians by default.
'Switch to Degrees as CR23X used Degrees.
AngleDegrees
PipeLineMode
'
' Declare array of flags as the CR23X had.
Public Flag(18) As Boolean

'{CR23X}
' WLEF TRAILER LICORS
' Written by Bruce Cook, May 2006

'\\\\\\\\\\\\\\\\\\\\\\\\\ DECLARATIONS /////////////////////////

Public licors(9)
Public t2(3)
Public p(3)
Public flow(3),tankPres(2)
Alias licors(1)=top_co2
Alias licors(2)=top_h20
Alias licors(3)=top_t
Alias licors(4)=mid_co2
Alias licors(5)=mid_h20
Alias licors(6)=mid_t
Alias licors(7)=bot_co2
Alias licors(8)=bot_h20
Alias licors(9)=bot_t
Alias p(1)=top_p
Alias p(2)=mid_p
Alias p(3)=bot_p
Alias t2(1)=top_t2
Alias t2(2)=mid_t2
Alias t2(3)=bot_t2
Alias flow(1)=top_flow
Alias flow(2)=mid_flow
Alias flow(3)=bot_flow
Alias tankPres(1) = towerN2
Alias tankPres(2) = licorN2

Units top_co2 = volts
Units top_h20 = volts
Units top_t = C
Units mid_co2 = volts
Units mid_h20 = volts
Units mid_t = C
Units bot_co2 = volts
Units bot_h20 = volts
Units bot_t = C
Units top_t2 = C
Units mid_t2 = C
Units bot_t2 = C
Units top_flow = slpm
Units mid_flow = slpm
Units bot_flow = slpm
Units top_p = kPa
Units mid_p = kPa
Units bot_p = kPa
Units towerN2 = psi
Units licorN2 = psi

' constants for sensors
' net radiometer CNR4 131285 (calibration date 5 april 2013)
Const pyran_top_mult= 1000/16.12
Const pyran_bot_mult=1000/12.07
Const pyrgeo_top_mult = 1000/6.87
Const pyrgeo_bot_mult = 1000/6.72
'
'  need LI190 multipliers, 
'     serial number: Q48064
'   calibration constant C = 6.86 microamps per 1000 micromoles s-1 m-2
'    PAR_Cal = 1000/(C * 0.604)
Const PAR_Cal = 241.35
' voltage and temperature variables
Public batt_volt  ' battery voltage
Public panel_temp ' panel temperature
Units batt_volt = V
Units panel_temp = C
Dim cnr4_mult(4)
Public cnr4(4),cnr4_prt_R,cnr4_T_C,Rs_R0
Alias cnr4(1) = SW_down
Alias cnr4(2) = SW_up
Alias cnr4(3) = LW_down
Alias cnr4(4) = LW_up
Units SW_down = W/m^2
Units SW_up = W/m^2
Units LW_down = W/m^2
Units LW_up = W/m^2
Units cnr4_T_C = C
Public atmpres
Units atmpres = hPa+500
Public TRHData(2)
Alias TRHData(1)= airTC
Alias TRHData(2)= RH
Units airTC = C
Units RH = %
Public rain_mm
Units rain_mm = mm
Public PAR_Den
Units PAR_Den = micro-mol/s/m^2
'\\\\\\\\\\\\\\\\\\\\\\\\ OUTPUT SECTION ////////////////////////

DataTable(fastData,True,-1)
  Sample(9, top_co2, Fp2)
  Sample(3, top_t2, FP2)
  Sample(3,top_p, FP2)
  Sample(3, top_flow, FP2)
EndTable
DataTable(metvalue,true,-1)
  DataInterval(0,1,min,0)
  Average(1,panel_temp, fp2,0)
  Average(1,batt_volt,fp2,0)
  Average(4,cnr4,ieee4,0)
  Average(1,cnr4_T_C,ieee4,0)
  Average(1,PAR_Den,fp2,0)
  Average(1,atmpres,fp2,0) ' add 500 to get the correct pressure
  Average(1,airTC,fp2,0)
  Average(1,RH, fp2, 0)
  Totalize(1,rain_mm, fp2, 0)
EndTable
DataTable(diagnostics,true,-1)
  DataInterval(0,1,min,0)
  Sample(3,top_flow,fp2)
  sample(2,towerN2,fp2)
EndTable

'\\\\\\\\\\\\\\\\\\\\\\\\\ SUBROUTINES //////////////////////////


'\\\\\\\\\\\\\\\\\\\\\\\\\\\ PROGRAM ////////////////////////////

BeginProg

  Scan(100,mSec, 3, 0)
    ' LICOR MEASUREMENTS
    VoltSe(top_co2, 9, mV5000, 1, False, 0, 250, 1, 0)
    ' convert licor temperature from voltage to degC
    top_t = top_t * 50. / 4096.
    mid_t = mid_t * 50. / 4096.
    bot_t = bot_t * 50. / 4096.
    '  FLOW METER
    ' Aalborg GFM371, S/N G10643
    ' 0..5V = 0..50 SLPM
    VoltSe(top_flow, 3, mV5000, 10, True, 0, 250, 0.01, 0)
    ' IN-LINE SAMPLE T
    ' Omega TX94-2 used to transmit RTD temperature signal (mA) to logger
    ' NOTE: This is different from top box, which uses TX94-1
    ' 100 ohm precision resister used to convert current to voltage
    VoltDiff(top_t2, 3, mV5000, 7, True, 0, 250, 0.0694, -45.5555)
    ' IN-LINE SAMPLE P
    ' MKS Baratron type 127
    ' CSI VDIV10.1 voltage divider (b/c 100 kPa = 750 torr = 7.5V)
    ' 0..10V = 0..1000 torr; 1 torr = 0.1333224 kPa
    VoltSe(top_p, 3, mV5000, 19, False, 0, 250, 0.0267, 0)

    ' rain gauge measurement
    ' rain gauge measurement must be in main part of program
    ' measure rain gauge
    ' P1 black
    ' AG white
    ' G clear
    PulseCount(rain_mm,1,1,2,0,0.254,0)
    ' OUTPUT DATA
    CallTable fastData
    CallTable metvalue
    CallTable diagnostics

  NextScan

  ' slow sequence for the met data
  SlowSequence
  cnr4_mult(1) = pyran_top_mult
  cnr4_mult(2)= pyran_bot_mult
  cnr4_mult(3)= pyrgeo_top_mult
  cnr4_mult(4)= pyrgeo_bot_mult
  Scan(5,sec,10,0)
    Battery (batt_volt)        'Measure the battery voltage
    PanelTemp (panel_temp,250) 'CR3000 panel temperature
    ' net radiometer
    ' CNR4 radiation measurements
    ' wiring: Pyranometer upper
    ' 7H signal red
    ' 7L signal blue
    ' gnd jumper to 1L
    ' Pyranometer lower
    ' 8H signal white
    ' 8L singal black (thin wire)
    ' gnd jumper to 2L
    ' Pyrgeometer upper
    ' 9H signal grey
    ' 9L signal yellow
    ' gnd jumper to 3L
    ' Pyrgeometer lower
    ' 10H signal brown
    ' 10L signal green
    ' gnd jumper to 4L
    ' black shield to G
    VoltDiff(cnr4(),4,mv20C,7,true,0,_60Hz,cnr4_mult(),0)
    ' CNR4 temperature PT100
    ' CNR 4 temp sensor wiring
    ' 11H temp green
    ' 11L temp yellow
    ' gnd black big wire
    ' IX1 temp grey
    ' IXR temp brown
    Resistance(cnr4_prt_R,1,mv200,11,Ix1,1,1500,true,true, 0,_60Hz,1,0)
    Rs_R0 = cnr4_prt_R/100
    PRT(cnr4_T_C,1,Rs_R0,1,0)

    'PAR Sensor

    ' li-190
    ' 12H red
    ' 12L black
    ' AG jumper from 9L
    ' G clear
    VoltDiff(PAR_Den,1,mv20,12, true,0,_60Hz,1,0)
    If PAR_Den< 0 Then PAR_Den=0
    PAR_Den = PAR_Den * PAR_Cal
    ' atmospheric pressure
    ' measure pressure with PTB110/CS106
    ' SE10 blue
    ' AG Yellow
    ' G black
    ' C2 Green
    ' 12V Red
    ' G clear
    VoltSe(atmpres,1,mV5000,25,False,0,_60Hz,.240,0)
    ' cs500 temp/rh sensor
    VoltSe(airTC,1,mV1000,26,False,0,_60Hz,.1,-40)
    VoltSe(RH,1,mv1000,27,false,0,_60Hz,.1,0)
    ' measure CS215temperature/humidity sensor, using control port C7
    ' 12V red
    ' White G
    ' black G
    ' green C7
    ' clear G
    'SDI12Recorder(airTC,7,"0","M!",1,0)

  NextScan
  EndSequence
  ' slow sequence for diagnostic values, tank pressures, and flow rates for top, mid and bottom
  ' try measuring once a minute then average to hourly output
  ' res - c1
  ' clk - c2
  ' gnd - G
  ' 12V - 12V
  ' COM H1 - SE28
  ' COM L1 - AG
  ' shied - G
  SlowSequence
  Scan(60,sec,5,0)
    PortSet(1,1)
    PulsePort (2 ,10000)
    ' measure the flow rate top
    VoltSe(top_flow,1,mV5000,28,True,0,_60Hz,.01,0)
    PulsePort(2,10000)
    ' green H1-2
    ' white L1-2
    ' Red 12V
    ' black power common
    VoltSe(mid_flow,1,mv5000,28,true,0,_60Hz,.01,0)
    PulsePort(2,10000)
    ' green H1-3
    ' white L1-3
    ' Red 12V
    ' black power common
    VoltSe(bot_flow,1,mv5000,28,true,0,_60Hz,.01,0)
    PulsePort(2,10000)
    ' white H1-4
    ' black L1-4
    ' red 12V
    VoltSe(towerN2,1,mv5000,28,true,0,_60Hz,0.6,0)
    PulsePort(2,10000)
    ' white H1-5
    ' black L1-5
    ' red 12V
    VoltSe(licorN2,1,mv5000,28,true,0,_60Hz,0.6,0)
    PortSet(1,0)
  NextScan
  EndSequence
EndProg
